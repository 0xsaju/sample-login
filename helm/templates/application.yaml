---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.app.name }}-uploads-pvc
spec:
  accessModes:
    - ReadWriteOnce  # Changed from ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.app.uploads.size }}
  storageClassName: {{ .Values.app.uploads.storageClass }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app.name }}
spec:
  type: {{ .Values.app.service.type }}
  ports:
    - port: {{ .Values.app.service.port }}
      targetPort: 5000
      protocol: TCP
  selector:
    app: {{ .Values.app.name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.app.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
        app.kubernetes.io/name: {{ .Values.app.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      nodeSelector:
        kubernetes.io/hostname: master
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z {{ .Values.app.name }}-mysql 3306; do echo waiting for mysql; sleep 2; done;']
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: Always  # Force pull new images
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: 5000  # Fixed port number
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 30  # Increase delay
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6    # Increase threshold
          env:
            - name: FLASK_APP
              value: "app.py"
            - name: FLASK_ENV
              value: "production"
            - name: MYSQL_HOST
              value: {{ .Values.app.name }}-mysql
            - name: MYSQL_USER
              value: root
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.name }}-mysql-secret
                  key: mysql-root-password
            - name: MYSQL_DB
              value: {{ .Values.mysql.database }}
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: uploads
              mountPath: /app/static/uploads
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: {{ .Values.app.name }}-uploads-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Release.Namespace }}  # Add this line to ensure it's in sample-login namespace
  labels:
    app.kubernetes.io/name: {{ .Values.app.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingress.className }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.className }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ .host }}
      http:
        paths:
        {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $.Values.app.name }}
                port:
                  number: {{ $.Values.app.service.port }}
        {{- end }}
  {{- end }}

